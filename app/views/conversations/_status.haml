.conversation-status
  - if conversation.listing && !conversation.status.eql?("free")
    - if conversation.status.eql?("pending")
      - if current_user?(conversation.listing.author)
        .status-links
          - ["accept", "reject"].each do |status|
            = render :partial => "status_link", :locals => { :conversation => conversation, :status => status }
      - else
        .icon-with-text-container
          .ss-clock.icon-part
          .text-part= t(".waiting_for_listing_author_to_accept_#{conversation.discussion_type}", :listing_author_name => conversation.other_party(@current_user).given_name_or_username)   
    - elsif conversation.status.eql?("accepted")
      - if conversation.requires_payment?(@current_community)
        - if conversation.listing.offerer?(@current_user)
          .icon-with-text-container
            .ss-clock.icon-part
            .text-part= t(".waiting_payment_from_requester", :requester_name => conversation.requester.given_name_or_username)
        - else
          .status-links
            %a{:href => new_person_message_payment_path(:person_id => @current_user.id, :message_id => conversation.id), :class => "status-link"}
              .icon-with-text.ss-coins
              .text-with-icon= t(".pay")
      - else
        - if conversation.listing.offerer?(@current_user)
          .icon-with-text-container
            .ss-clock.icon-part
            .text-part= t(".waiting_confirmation_from_requester", :requester_name => conversation.other_party(@current_user).given_name_or_username)
        - else
          .status-links
            - ["confirm", "cancel"].each do |status|
              = render :partial => "status_link", :locals => { :conversation => conversation, :status => status }
    - elsif conversation.status
      .icon-with-text-container
        .icon-part{:class => icon_for(conversation.status)}
        .text-part= t(".#{conversation.discussion_type}_#{conversation.status}")
      - if ["confirmed", "canceled"].include? conversation.status
        - if conversation.has_feedback_from?(@current_user)
          .icon-with-text-container
            .ss-like.icon-part
            .text-part= t(".feedback_given")
        - elsif conversation.feedback_skipped_by?(@current_user)
          .icon-with-text-container
            .ss-skipforward.icon-part
            .text-part= t(".feedback_skipped")
        - else
          .icon-with-text-container
            %a{:href => new_person_message_feedback_path(:person_id => @current_user.id, :message_id => conversation.id.to_s)}
              .ss-like.icon-part
              .text-part= t(".give_feedback")
          .icon-with-text-container
            %a{:href => skip_person_message_feedbacks_path(:person_id => @current_user.id, :message_id => conversation.id.to_s), :data => { :method => "put", :remote => "true"}}
              .ss-skipforward.icon-part
              .text-part= t(".skip_feedback")