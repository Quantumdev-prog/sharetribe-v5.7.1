- other_party = conversation.other_party(@current_user)
- unless other_party.nil?
  - last_message = conversation.last_message
  .feed-item.inbox-feed-item{:class => (conversation.read_by?(@current_user) ? "" : "unread"), :id => "conversation_#{conversation.id.to_s}"}
    .feed-author-avatar
      = small_avatar_thumb other_party
    .feed-content
      .author
        = render :partial => "conversation_with", :locals => { :conversation => conversation, :other_party => other_party }
        = t("conversations.show.last_message_at", :time => time_ago(conversation.last_message_at))
      %h3
        = link_to single_conversation_path(:conversation_type => action_name, :id => conversation.id) do
          - if last_message.content.blank?
            - if last_message.action.eql?("pay")
              - if last_message.sender.eql?(@current_user)
                = icon_tag("reply", ["icon-fix"])
              = t("conversations.message.paid", :sum => humanized_money_with_symbol(last_message.conversation.payment.total_sum))
            - else
              - if last_message.sender.eql?(@current_user)
                = icon_tag("reply", ["icon-fix"])
              = t(".#{last_message.action}ed_#{last_message.conversation.discussion_type}").capitalize
          - else
            - if last_message.sender.eql?(@current_user)
              = icon_tag("reply", ["icon-fix"])
            = "\"#{truncate(last_message.content, :length => 100, :omission => "...")}\""
      %small.feed-excerpt

      - unless conversation.status.eql?("free")
        %small
          .listed-conversation-status-padding{:id => "conversation_#{conversation.id.to_s}_status"}
            = render :partial => "status", :locals => { :conversation => conversation }
