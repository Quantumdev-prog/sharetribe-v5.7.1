- content_for :javascript do
  initialize_reply_form('#{I18n.locale}');

- content_for :title_header do
  %h1
    = link_to person_inbox_path(@current_user) do
      = t("layouts.no_tribe.inbox")
    |
    = t(".conversation_with", person: link_to(conversation_data[:other_party][:name], conversation_data[:other_party][:url])).html_safe

- transaction = conversation_data[:transaction]

.centered-section-wide
  .message-avatar-padding
    .row
      .col-12
        - if transaction.present?
          %h2
            = link_to transaction[:listing][:title], conversation_data[:listing_url]

        -# TODO Add details
          - @conversation.with(:listing_conversation) do
            = render partial: "conversations/details", locals: { listing_conversation: @conversation, listing: @conversation.listing }

        - if transaction.present?
          - listing = transaction[:listing]

          - if transaction[:status] == "free" && @current_community.payments_in_use?
            -# Show Call to Action button for free conversations

            - unless transaction[:is_author]
              = link_to transaction[:reply_to_listing_path], :class => "message-book-button" do
                .content
                  = transaction[:action_button_label]

          - else
            -# Show current status for others

            -# TODO Status in use
            -# #{:id => "conversation_#{@conversation.id.to_s}_status"}
            -#
              %div
                = render :partial => "status", :locals => { :transaction => transaction[:model] }


  #reply_form.message-avatar-padding.message-reply-form
    = form_for message_form, :url => message_form_action do |f|
      = f.label :content, t(".write_a_reply")
      = f.text_area :content, :class => "reply_form_text_area"
      = f.hidden_field :conversation_id
      = f.hidden_field :sender_id
      = f.button t(".send_reply")

  #messages
    = render :partial => "conversations/message", :collection => messages, as: :message_or_action
