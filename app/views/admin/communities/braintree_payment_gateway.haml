- content_for :javascript do
  initialize_admin_integrations_form("#{I18n.locale}", "#{@community.id}", "#{t('.invalid_twitter_handle')}", "#{t('.invalid_facebook_connect_id')}", "#{t('.invalid_facebook_connect_secret')}" );

- content_for :title_header do
  %h1= t("layouts.admin.admin")

= render :partial => "layouts/left_hand_navigation", :locals => { :links => admin_links_for(@community) }

.left-navi-section
  %h2= t(".braintree_payment_gateway", :community_name => @community.name(I18n.locale))

  - if @payment_gateway.configured?
    .row
      .col-12
        %p
          Webhook:
          - hook_url = "#{request.protocol}webhooks.#{APP_CONFIG.domain}/webhooks/braintree?community_id=#{@current_community.id}"
          = link_to hook_url, hook_url
        %p
          If configurations are correctly set the webhook URL should return randomly generated string with numbers and letters.

  = form_for @payment_gateway, :url => payment_gateways_admin_community_path(@community), :method => (@payment_gateway.new_record? ? :post : :put) do |form|
    .row
      .col-12
      = form.label :braintree_environment, t(".environment"), :class => "input"
      = form.select :braintree_environment, [["Sandbox", "sandbox"], ["Production", "production"]]
    .row
      .col-12
      = form.label :braintree_public_key, t(".public_key"), :class => "input"
      = form.text_field :braintree_public_key, :class => "text_field"
    .row
      .col-12
      = form.label :braintree_private_key, t(".private_key"), :class => "input"
      = form.text_field :braintree_private_key, :class => "text_field"
    .row
      .col-12
      = form.label :braintree_merchant_id, t(".merchant_id"), :class => "input"
      = form.text_field :braintree_merchant_id, :class => "text_field"
    .row
      .col-12
      = form.label :braintree_master_merchant_id, t(".master_merchant_id"), :class => "input"
      = form.text_field :braintree_master_merchant_id, :class => "text_field"
    .row
      .col-12
      = form.label :braintree_client_side_encryption_key, t(".client_side_encryption_key"), :class => "input"
      = form.text_area :braintree_client_side_encryption_key, :class => "text_field"

    .row
      = form.button t("admin.communities.integrations.save")

