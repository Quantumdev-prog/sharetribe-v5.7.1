- content_for :javascript do
  initialize_new_community_membership_form("#{t("people.new.email_is_in_use_or_not_allowed")}",#{@current_community.join_with_invite_only?}, "#{t("people.new.invalid_invitation_code")}");

- if session[:fb_join] == "pending_analytics"
  - content_for :javascript do
    report_analytics_event(['user', "signed up", "facebook"]);
  - session[:fb_join] = "analytics_reported"

.centered-section
  %h2
    = t('.join_community', :community => @current_community.name)
    
  - unless session[:fb_join] || (@current_community.requires_organization_membership?)
    %p
      = t('.you_are_not_a_member_of_this_community', :community => @current_community.name)
  %p
    - if @current_community.join_with_invite_only? && session[:invitation_code].blank?
      = t('.you_can_join_with_invite_only')
    - elsif @current_community.allowed_emails? && ! @current_user.has_valid_email_for_community?(@current_community)
      - if @current_community.allowed_emails.split(",").size > 1
        = t('.you_can_join_email_confirmation_multiple_addresses', :email_endings => @current_community.allowed_emails.split(",").join(", "))
      - else
        = t('.you_can_join_email_confirmation', :email_ending => @current_community.allowed_emails)
    - else
      - if session[:fb_join]
        = t('.welcome_fb_user', :name => @current_user.given_name_or_username)
        = t('.fb_join_accept_terms')
      - elsif ! (@current_community.requires_organization_membership?)
        = t('.you_can_join')
        

  - unless @current_user.communities.size < 1 || @current_community.requires_organization_membership?
    %p
      = t(".if_want_to_view_content")
      = link_to(t(".log_out"), logout_path) + "."
      
      
  = form_for @community_membership, :url => { :controller => "community_memberships", :action => "create" } do |form|
  
    - if @current_community.join_with_invite_only?
      - if session[:invitation_code]
        = hidden_field_tag "invitation_code", session[:invitation_code]
      - else
        = label_tag :invitation_code, t('people.new.invitation_code'), :class => "inline"
        = link_to t('common.what_is_this'), "#", :tabindex => "-1", :id => "help_invitation_code_link", :class => "label-info"
        = text_field_tag "invitation_code", nil, :class => :text_field, :maxlength => "20", :value => (params[:code] || "")
        
    - if @current_community.requires_organization_membership? 
      %p
        =t(".to_join_you_need_organization_membership")
      - if Organization.count > 0
        %select{name: "organization_id"}
          %option{value: 0}= t(".please_select_your_organization")
          - Organization.all.sort_by(&:name).each do |org|
            %option{value: org.id, selected: (@org && @org.id == org.id)}= org.name
      %p
        = link_to t(".create_new_organization"), new_organization_path

        
            
    - if @current_community.allowed_emails? && ! @current_user.has_valid_email_for_community?(@current_community) || @current_community.requires_organization_membership?
      - default_email_field_value = (@current_community.requires_organization_membership? ? @current_user.email : "")
      = form.label :email, t('people.new.email'), :class => "before_description"
      = form.text_field :email, :class => :text_field, :maxlenght => "255", :value => default_email_field_value 
    
    - unless @skip_terms_checkbox 
      .outer-checkbox-container
        .checkbox-container
          %input{:type => "checkbox", :id => "community_membership_consent", :name => "community_membership[consent]"}
          = form.label :consent, t('people.new.i_accept_the'), :class => "checkbox"
          = link_to t("people.new.terms"), "#", :tabindex => "-1", :id => "terms_link", :class => "form"
    = form.hidden_field :community_id, :value => @current_community.id
    = form.hidden_field :person_id, :value => @current_user.id
    = form.hidden_field :consent, :value => @current_community.consent
    = button_tag(t('.join_community_button'), :class => "send_button")

= render :partial => "people/help_texts", :collection => ["terms", "help_invitation_code"], :as => :field