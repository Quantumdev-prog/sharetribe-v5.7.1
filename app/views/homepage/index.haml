- content_for :javascript do
  initialize_homepage(#{filters_in_use?});

- content_for :title_header do
  - if @current_user
    .browse-view-search-form
      = form_tag({ :action => :index, :controller => :homepage}, :method => "get", :id => "homepage-filters") do
        .search-form-input.search-form-text-field
          = text_field_tag "q", params[:q], :placeholder => t("homepage.index.what_do_you_need")
        .search-form-input
          %button.action-button{type: 'submit'}
            = icon_tag("search", ["icon-part"])
  - else
    %h1= community_slogan
    %p= community_description
    .search-form
      = form_tag({ :action => :index, :controller => :homepage}, :method => "get", :id => "homepage-filters") do
        .search-form-input.search-form-text-field
          = text_field_tag "q", params[:q], :placeholder => t("homepage.index.what_do_you_need")
        .search-form-input
          %button.action-button{type: 'submit'}
            = icon_tag("search", ["icon-part"])

.home-toolbar
  .home-toolbar-button-group
    %a.home-toolbar-button-group-button{href: (root + '?view=grid'), title: t("homepage.filters.list_button")}
      = icon_tag("thumbnails", ["icon-fix", "home-button-group-icon"])
      = t("homepage.filters.grid_button")
    %a.home-toolbar-button-group-button{href: (root + '?view=list'), title: t("homepage.filters.list_button")}
      = icon_tag("list", ["icon-fix", "home-button-group-icon"])
      = t("homepage.filters.list_button")
    %a.home-toolbar-button-group-button{href: (root + '?view=map'), title: t("homepage.filters.list_button")}
      = icon_tag("map", ["icon-fix", "home-button-group-icon"])
      = t("homepage.filters.map_button")

.home-grid
  - if @categories_enabled
    .left-column-1-4
      .left-column-content-1-4
        - @main_categories.each do |category|
          = link_to category.display_name.mb_chars.capitalize.to_s, params.merge({category: category.name}), :class => "home-categories-main", :data => {category: category.name}
          - if category.children
            - if show_subcategory_list(category, params[:category], @categories)
              - category.children.each do |sub_category|
                - if @categories.include?(sub_category)
                  %a.home-categories-sub{href: "&category=" + category.name}
                    = link_to sub_category.display_name.mb_chars.capitalize.to_s, params.merge({category: sub_category.name}), :class => "home-categories-sub", :data => {:"sub-category" =>sub_category.name}

  / This is somewhat ugly. Imo, we shouldn't do "routing" in views
  - if params[:view] == "map" || params[:map] == "true"
    .right-column-3-4
      .home-map
        = render :partial => "map"
  - elsif params[:view] == "grid"
    .grid-container{:class => @categories_enabled ? "grid-container-3-4" : "grid-container-4-4" }
      - @listings.each do |listing|
        .home-grid-column
          .home-grid-column-content
            = link_to listing do
              .home-listing-image-container
                - if listing.listing_images.size > 0
                  = image_tag listing.listing_images.first.image.url(:email), {:alt => listed_listing_title(listing), :class => "home-listing-image"}
                .home-listing-overlay
                  .home-listing-title
                    = listing.title
                - if listing.price
                  .home-listing-price
                    = money_without_cents_and_with_symbol(listing.price).upcase
            .home-listing-details
              .home-listing-avatar
                = small_avatar_thumb(listing.organization_or_author?(@current_community))
              = link_to(listing.author, :class => "home-listing-author") do
                = listing.author.name
  - else
    .right-column-3-4
      - @listings.each do |listing|
        .home-list-item
          = link_to listing, :class => "home-list-image" do
            - if listing.listing_images.size > 0
              = image_tag listing.listing_images.first.image.url(:email), {:alt => listed_listing_title(listing), :class => "home-listing-image"}
            - else
              .home-no-image
                = t(".no_image")
                / FIXME! Add image processing
          .home-list-details
            .home-list-details-left
              %h2.home-list-title
                = link_to listing do
                  = listing.title
                  %a.home-share-type-link{:href => share_type_url(listing)}
                    = icon_tag(listing.icon_name, ["icon-fix"])
                    = listed_listing_share_type(listing)
              .home-list-author
                .home-list-avatar
                  = small_avatar_thumb(listing.organization_or_author?(@current_community))
                .home-list-author-details
                  = link_to listing.author :class => "home-list-author-name" do
                    = listing.author.name
                  - if @current_community.testimonials_in_use
                    .home-list-author-reviews
                      = icon_tag("testimonial")
                      - if listing.author.received_testimonials.size > 0
                        = pluralize(listing.author.received_testimonials.size, t(".review"), t(".reviews"))
                        = "(#{listing.author.feedback_positive_percentage.to_s}% #{t("people.show.positive")}, #{listing.author.received_positive_testimonials.size}/#{listing.author.received_testimonials.size})"
                      - else
                        = t(".no_reviews")

            .home-list-details-right
              - if listing.price
                .home-list-price
                  .home-list-price-value
                    = money_without_cents_and_with_symbol(listing.price).upcase
                  - if !listing.quantity.blank? || @current_community.vat
                    - price_text = if !listing.quantity.blank? then "/ " + listing.quantity  else "" end + if @current_community.vat then " " + t("listings.displayed_price.price_excludes_vat") else "" end
                    .home-list-price-quantity{:title => price_text}
                      = price_text

  / - if @current_community.testimonials_in_use
  /   .listing-main.left-column-2-3
  /     .row
  /       %h2.people-header
  /         - if listing.author.received_testimonials.size > 0
  /           = pluralize(listing.author.received_testimonials.size, t(".review"), t(".reviews"))
  /           = "(#{listing.author.feedback_positive_percentage.to_s}% #{t("people.show.positive")}, #{listing.author.received_positive_testimonials.size}/#{listing.author.received_testimonials.size})"
  /         - else
  /           = t(".no_reviews")
  /       - if listing.author.received_testimonials.size > 0
  /         #profile-testimonials-list
  /           = render :partial => "testimonials", :locals => {:received_testimonials => listing.author.received_testimonials, :limit => 3}


















.feed-navigation
  .feed-actions.actions-menu
    %a.request-link{href: new_listing_path + "?ref=homepage"} 
      = icon_tag("new_listing", ["icon-with-text"])
      .text-with-icon#post_new_listing= t(".post_new_listing")
    %a.offset-link.toggle{href: '#', id: "filters-toggle", data: {toggle: '.feed-filters'}}
      = icon_tag("search")
    - if params[:map] == "true"
      %a.offset-link.list-button.toggle{href: root, title: t("homepage.filters.list")}
        = icon_tag("list", ["list-icon-margin"])
    - else
      %a.offset-link.map-button.toggle{href: (root + '?map=true'), title: t("homepage.filters.map")}
        = icon_tag("map")

  .feed-filters.toggle-menu-feed-filters.hidden
    = form_tag({ :action => :index, :controller => :homepage}, :method => "get", :id => "homepage-filters") do
    
      .feed-filter-dropdowns#feed-filter-dropdowns
        .filter-title
          = t("homepage.filters.show")
        = render :partial => "filter_share_types"
        = render :partial => "filter_categories"
      %input{type: "hidden", name: "map", id: "hidden-map-toggle", value: params[:map]}
      
      -#.app-store-badge
        =# link_to image_tag(@app_store_badge_filename), "https://itunes.apple.com/us/app/sharetribe/id545640772?mt=8", :title => t(".available_on_the_app_store")

.feed-map-link
  - if params[:map] == "true"
    %a.map-link.list-button{href: root, title: t("homepage.filters.list")}
      = icon_tag("list", ["icon-with-text list-icon-margin"])
      .text-with-icon.hidden-text= t("homepage.filters.list")
  - else
    %a.map-link.map-button{href: (root + '?map=true'), title: t("homepage.filters.map")}
      = icon_tag("map", ["icon-with-text"])
      .text-with-icon.hidden-text= t("homepage.filters.map")      

- begin
  .homepage-feed.feed
    - if ! logged_in? && @private_listing_count > 0
      .permanent-notification.private-listing-notification
        .icon-with-text-container
          = icon_tag("information", ["icon-part"])
          .text-part
            = t(".private_listing_notification", :listing_count => pluralize(@listing_count, t(".open_listing"), t(".open_listings")), :private_listing_count => @private_listing_count, :log_in_link => link_to(t(".private_listing_notification_log_in"), login_path), :be_verb => (@private_listing_count > 1 ? t(".are")  : t(".is"))).html_safe        
    - elsif @listing_count < 1
      - if !params[:q] && !params[:share_type] && !params[:category]
        .permanent-notification.private-listing-notification
          .icon-with-text-container
            = icon_tag("information", ["icon-part"])
            .text-part
              = community_blank_slate
    - if params[:map] == "true"
      = # render :partial => "map"
    - else
      - if @listings.total_entries > 0
        = render :partial => "recent_listing", :collection => @listings, :as => :listing
        = will_paginate(@listings)
        = pageless(@listings.total_pages, '.homepage-feed', request.fullpath, t('.loading_more_content'))
      - else
        - if params[:q] || params[:share_type] || params[:category]
          .permanent-notification.private-listing-notification
            .icon-with-text-container
              = icon_tag("alert", ["icon-part"])
              .text-part
                = t(".no_listings_with_your_search_criteria")
- rescue Riddle::ResponseError => e
  - ApplicationHelper.send_error_notification("Can't connect to sphinx", "Sphinx Error")
  %b
    Error: Can't connect to the listings search index.
