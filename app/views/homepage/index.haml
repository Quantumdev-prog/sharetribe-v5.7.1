- content_for :javascript do
  initialize_homepage(#{filters_in_use?});

- content_for :title_header do
  - if @current_user
    .browse-view-search-form
      = form_tag({ :action => :index, :controller => :homepage}, :method => "get", :id => "homepage-filters") do
        .search-form-input.search-form-text-field
          = text_field_tag "q", params[:q], :placeholder => t("homepage.index.what_do_you_need")
        .search-form-input
          %button.action-button{type: 'submit'}
            = icon_tag("search", ["icon-part"])
  - else
    %h1= community_slogan
    %p= community_description
    .search-form
      = form_tag({ :action => :index, :controller => :homepage}, :method => "get", :id => "homepage-filters") do
        .search-form-input.search-form-text-field
          = text_field_tag "q", params[:q], :placeholder => t("homepage.index.what_do_you_need")
        .search-form-input
          %button.action-button{type: 'submit'}
            = icon_tag("search", ["icon-part"])

.home-toolbar

  .home-toolbar-show-filters-button-container
    .home-toolbar-show-filters-button#home-toolbar-show-filters
      = t(".filter")

  .home-toolbar-button-group
    - ["grid", "list", "map"].each do |view_type|
      %a.home-toolbar-button-group-button{href: (root + "?view=#{view_type}"), title: t("homepage.filters.#{view_type}_button"), class: (@view_type.include?(view_type) ? "selected" : "")}
        = icon_tag(view_type, ["icon-fix", "home-button-group-icon"])
        %span.home-toolbar-button-text
          = t("homepage.filters.#{view_type}_button")

  .home-toolbar-filters.home-toolbar-filters-mobile-hidden#home-toolbar-filters
    .toggle-container.home-toolbar-toggle-container
      .toggle.with-borders.hidden{data: {toggle: '.home-toolbar-share-type-menu'}}
        .toggle-header-container
          .toggle-header
            - current_share_type = @share_types.find {|type| type.name == params[:share_type]}
            - if current_share_type
              = current_share_type.display_name.mb_chars.capitalize.to_s
            - else
              = t("homepage.filters.all_listing_types")

          = icon_tag("dropdown", ["icon-dropdown"])

      .home-toolbar-share-type-menu.toggle-menu.hidden
        = link_to t("homepage.filters.all_listing_types"), params.merge({share_type: "all"})
        - @listing_types.each do |main_type|
          = link_to main_type.display_name.mb_chars.capitalize.to_s, params.merge({share_type: main_type.name})
          - if main_type.children
            - main_type.children.each do |share_type|
              - if @share_types.include?(share_type)
                = link_to params.merge({share_type: share_type.name}), :class => "toggle-menu-subitem" do
                  = share_type.display_name.mb_chars.capitalize.to_s

    - if @categories_enabled
      .toggle-container.home-toolbar-toggle-container.hidden-tablet
        .toggle.with-borders.hidden{data: {toggle: '#home-toolbar-categories-menu'}}
          .toggle-header-container
            .toggle-header
              - current_category = @categories.find {|type| type.name == params[:category]}
              - if current_category
                = current_category.display_name.mb_chars.capitalize.to_s
              - else
                = t("homepage.filters.all_categories")

            = icon_tag("dropdown", ["icon-dropdown"])

        #home-toolbar-categories-menu.toggle-menu.hidden
          = link_to t("homepage.filters.all_categories"), params.merge({category: "all"})
          - @main_categories.each do |category|
            = link_to category.display_name.mb_chars.capitalize.to_s, params.merge({category: category.name})
            - if category.children
              - category.children.each do |sub_category|
                - if @categories.include?(sub_category)
                  = link_to sub_category.display_name.mb_chars.capitalize.to_s, params.merge({category: sub_category.name}), :class => "toggle-menu-subitem"

.row
  - if @categories_enabled
    .col-3.visible-tablet
      = link_to t("homepage.filters.all_categories"), params.merge({category: "all"}), :class => "home-categories-main #{if all_categories_selected(params[:category], @main_categories, @categories) then 'selected' end}"
      - @main_categories.each do |category|
        - show_subcategories = show_subcategory_list(category, params[:category], @categories)
        = link_to category.name, params.merge({category: category.name}), :class => "home-categories-main #{if show_subcategories then 'selected' end} #{if has_subcategories(category, @categories) then 'has-subcategories' end}", :data => {category: category.name}
        - if category.children
          - if show_subcategories
            - category.children.each do |sub_category|
              - if @categories.include?(sub_category)
                - is_selected = sub_category.name == params[:category]
                = link_to sub_category.display_name.mb_chars.capitalize.to_s, params.merge({category: sub_category.name}), :class => "home-categories-sub #{if is_selected then 'selected' end}", :data => {:"sub-category" =>sub_category.name}

  - main_container_class = if @categories_enabled then "col-9" else "col-12" end
  - if @view_type.eql?("map")
    %div{:class => main_container_class}
      .home-map
        = render :partial => "map"
  - else
    %div{:class => main_container_class}
      - if @view_type.eql?("grid")
        .home-fluid-thumbnail-grid
          = render :partial => "grid_item", :collection => @listings, :as => :listing
      - else
        .home-listings
          = render :partial => "list_item", :collection => @listings, :as => :listing
      .home-loading-more
        = will_paginate(@listings)
        - item_container = if @view_type.eql?("grid") then '.home-fluid-thumbnail-grid' else '.home-listings' end
        = pageless(@listings.total_pages, item_container, request.fullpath, t('.loading_more_content'))

  / - if @current_community.testimonials_in_use
  /   .listing-main.left-column-2-3
  /     .row
  /       %h2.people-header
  /         - if listing.author.received_testimonials.size > 0
  /           = pluralize(listing.author.received_testimonials.size, t(".review"), t(".reviews"))
  /           = "(#{listing.author.feedback_positive_percentage.to_s}% #{t("people.show.positive")}, #{listing.author.received_positive_testimonials.size}/#{listing.author.received_testimonials.size})"
  /         - else
  /           = t(".no_reviews")
  /       - if listing.author.received_testimonials.size > 0
  /         #profile-testimonials-list
  /           = render :partial => "testimonials", :locals => {:received_testimonials => listing.author.received_testimonials, :limit => 3}


















/ .feed-navigation
/   .feed-actions.actions-menu
/     %a.request-link{href: new_listing_path + "?ref=homepage"} 
/       = icon_tag("new_listing", ["icon-with-text"])
/       .text-with-icon#post_new_listing= t(".post_new_listing")
/     %a.offset-link.toggle{href: '#', id: "filters-toggle", data: {toggle: '.feed-filters'}}
/       = icon_tag("search")
/     - if params[:map] == "true"
/       %a.offset-link.list-button.toggle{href: root, title: t("homepage.filters.list")}
/         = icon_tag("list", ["list-icon-margin"])
/     - else
/       %a.offset-link.map-button.toggle{href: (root + '?map=true'), title: t("homepage.filters.map")}
/         = icon_tag("map")

/   .feed-filters.toggle-menu-feed-filters.hidden
/     = form_tag({ :action => :index, :controller => :homepage}, :method => "get", :id => "homepage-filters") do
    
/       .feed-filter-dropdowns#feed-filter-dropdowns
/         .filter-title
/           = t("homepage.filters.show")
/         = render :partial => "filter_share_types"
/         = render :partial => "filter_categories"
/       %input{type: "hidden", name: "map", id: "hidden-map-toggle", value: params[:map]}
      
/       -#.app-store-badge
/         =# link_to image_tag(@app_store_badge_filename), "https://itunes.apple.com/us/app/sharetribe/id545640772?mt=8", :title => t(".available_on_the_app_store")

/ .feed-map-link
/   - if params[:map] == "true"
/     %a.map-link.list-button{href: root, title: t("homepage.filters.list")}
/       = icon_tag("list", ["icon-with-text list-icon-margin"])
/       .text-with-icon.hidden-text= t("homepage.filters.list")
/   - else
/     %a.map-link.map-button{href: (root + '?map=true'), title: t("homepage.filters.map")}
/       = icon_tag("map", ["icon-with-text"])
/       .text-with-icon.hidden-text= t("homepage.filters.map")      

/ - begin
/   .homepage-feed.feed
/     - if ! logged_in? && @private_listing_count > 0
/       .permanent-notification.private-listing-notification
/         .icon-with-text-container
/           = icon_tag("information", ["icon-part"])
/           .text-part
/             = t(".private_listing_notification", :listing_count => pluralize(@listing_count, t(".open_listing"), t(".open_listings")), :private_listing_count => @private_listing_count, :log_in_link => link_to(t(".private_listing_notification_log_in"), login_path), :be_verb => (@private_listing_count > 1 ? t(".are")  : t(".is"))).html_safe        
/     - elsif @listing_count < 1
/       - if !params[:q] && !params[:share_type] && !params[:category]
/         .permanent-notification.private-listing-notification
/           .icon-with-text-container
/             = icon_tag("information", ["icon-part"])
/             .text-part
/               = community_blank_slate
/     - if params[:map] == "true"
/       = # render :partial => "map"
/     - else
/       - if @listings.total_entries > 0
/         = render :partial => "recent_listing", :collection => @listings, :as => :listing
/         / = will_paginate(@listings)
/         / = pageless(@listings.total_pages, '.homepage-feed', request.fullpath, t('.loading_more_content'))
/       - else
/         - if params[:q] || params[:share_type] || params[:category]
/           .permanent-notification.private-listing-notification
/             .icon-with-text-container
/               = icon_tag("alert", ["icon-part"])
/               .text-part
/                 = t(".no_listings_with_your_search_criteria")
/ - rescue Riddle::ResponseError => e
/   - ApplicationHelper.send_error_notification("Can't connect to sphinx", "Sphinx Error")
/   %b
/     Error: Can't connect to the listings search index.
